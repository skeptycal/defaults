package defaults // import "github.com/skeptycal/defaults"

const NL = types.NL ...
var AnyBooler = anybool.AnyBooler
func AssertEquals(t *testing.T, testname string, argname string, want Any, got Any, wantErr bool)
func AssertNotEqual(t *testing.T, testname string, argname string, want Any, got Any, wantErr bool)
func AssertStringEquals(t *testing.T, testname string, argname string, want Any, got Any, wantErr bool)
func AssertTypeEquals(arg Any, typ string) error
func CheckType(any Any, typ string) bool
func DbEcho(args ...interface{}) (n int, err error)
func Example()
func GetKind(any Any) string
func GetType(any Any) string
func IsString(arg Any) error
func Trace()
type Any = types.Any
type Booler = anybool.Booler
type DbWriter interface{ ... }
    var DebugWriter DbWriter = NewDebugWriter(dbEchoPrefixBytes, defaultDbWriter)
    func NewDebugWriter(p []byte, w io.Writer) DbWriter
type DefaultMapper interface{ ... }
    var Defaults DefaultMapper = NewDefaults(defaultDebugState, defaultTraceState)
    func NewDefaults(debugState, traceState bool) DefaultMapper
type Enabler = types.Enabler
type Formatter = fmt.Formatter
type GetSetter = types.GetSetter
type IPAddr [4]byte
type Locker = sync.Locker
type Printer = types.Printer
type Setting interface{ ... }
    func NewSetting(key string, value Any) Setting
type State = fmt.State
type StringWriter = io.StringWriter
type Stringer = fmt.Stringer
type Writer = io.Writer
